//=============================================================================
//
// 敵の処理 [charge.cpp]
// Author : トシキ
//
//=============================================================================
//-----------------------------------------------------------------------------
//	インクルードファイル
//-----------------------------------------------------------------------------
#include "charge.h"
#include "gauge.h"

//-----------------------------------------------------------------------------
//	マクロ定義
//-----------------------------------------------------------------------------
#define CHARGE_POS_X 500.0f		//チャージのX座標
#define CHARGE_POS_Y 630.0f		//チャージのY座標

#define CHARGE_SIZE_X 5.1f		//チャージの大きさ
#define CHARGE_SIZE_Y 10.0f		//チャージの大きさ

#define ADD_COUNT_NUM 60		//チャージが溜まるスピ―ド

//-----------------------------------------------------------------------------
//	静的メンバ変数初期化
//-----------------------------------------------------------------------------
int CCharge::m_nCount = 0;
CGauge *CCharge::m_pGauge = NULL;

//=============================================================================
//	コンストラクタ
//=============================================================================
CCharge::CCharge(int nPriority) : CScene(nPriority)
{
}

//=============================================================================
//	デストラクタ
//=============================================================================
CCharge::~CCharge()
{
}

//=============================================================================
//	生成処理
//=============================================================================
CCharge * CCharge::Create(D3DXVECTOR3 pos, D3DXVECTOR3 size)
{
	CCharge *pCharg;
	pCharg = new CCharge;
	if (pCharg != NULL)
	{
		pCharg->Init(pos, size);
	}
	return nullptr;
}

//=============================================================================
//	初期化処理
//=============================================================================
HRESULT CCharge::Init(D3DXVECTOR3 pos, D3DXVECTOR3 size)
{
	SetObjType(OBJTYPE_CHARGE);
	m_pGauge = CGauge::Create(D3DXVECTOR3(CHARGE_POS_X, CHARGE_POS_Y, 0.0f),
							  D3DXVECTOR3(CHARGE_SIZE_X, CHARGE_SIZE_Y,0.0f));
	return S_OK;
}

//=============================================================================
//	終了処理
//=============================================================================
void CCharge::Uninit(void)
{
	if (m_pGauge != NULL)
	{
		m_pGauge->Uninit();
		delete m_pGauge;
		m_pGauge = NULL;
	}

	Release();
}

//=============================================================================
//	更新処理
//=============================================================================
void CCharge::Update(void)
{
}

//=============================================================================
//	描画処理
//=============================================================================
void CCharge::Draw(void)
{
	if (m_pGauge != NULL)
	{
		m_pGauge->Draw();
	}
}

//=============================================================================
//	加算処理
//=============================================================================
void CCharge::Add(void)
{
	m_nCount++;
	if (m_nCount >= ADD_COUNT_NUM)
	{
		m_nCount = ADD_COUNT_NUM;
	}
	if (m_pGauge != NULL)
	{
		m_pGauge->SetNum(m_nCount);
	}

}

//=============================================================================
//	チャージ設定
//=============================================================================
void CCharge::Set(void)
{
	if (m_pGauge != NULL)
	{
		m_nCount = 0;
		m_pGauge->SetNum(m_nCount);
	}
}
