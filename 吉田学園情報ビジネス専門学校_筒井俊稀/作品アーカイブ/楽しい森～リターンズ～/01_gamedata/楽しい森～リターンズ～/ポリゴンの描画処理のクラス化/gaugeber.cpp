//=============================================================================
//
// 弾の爆発の処理 [gaugeber.cpp]
// Author : 筒井
//
//=============================================================================
//-----------------------------------------------------------------------------
//	インクルードファイル
//-----------------------------------------------------------------------------
#include "gaugeber.h"
#include "manager.h"
#include "renderer.h"

//-----------------------------------------------------------------------------
//	マクロ定義
//-----------------------------------------------------------------------------
#define TEXTURE_PATH_GAUGBER "data/texture/gaugeber001.png"

//-----------------------------------------------------------------------------
//	静的メンバ変数宣言の初期化
//-----------------------------------------------------------------------------
LPDIRECT3DTEXTURE9 CGaugeber::m_pTexture = NULL;

//-----------------------------------------------------------------------------
//	コンストラクタ
//-----------------------------------------------------------------------------
CGaugeber::CGaugeber(int nPriority)
{
	//各変数の初期化
	m_pos = D3DXVECTOR3();
	m_size = D3DXVECTOR3();
}

//-----------------------------------------------------------------------------
//	デストラクタ
//-----------------------------------------------------------------------------
CGaugeber::~CGaugeber()
{
}

//-----------------------------------------------------------------------------
//	生成処理
//-----------------------------------------------------------------------------
CGaugeber * CGaugeber::Create(D3DXVECTOR3 pos, D3DXVECTOR3 size)
{
	CGaugeber *pGaugeber;
	pGaugeber = new CGaugeber;
	if (pGaugeber != NULL)
	{
		pGaugeber->Init(pos, size);
	}
	return pGaugeber;
}

//-----------------------------------------------------------------------------
//	初期化処理
//-----------------------------------------------------------------------------
HRESULT CGaugeber::Init(D3DXVECTOR3 pos, D3DXVECTOR3 size)
{
	CScene2d::Init(pos, size);
	//オブジェクトの種類の設定
	SetObjType(CScene::OBJTYPE_GAUGEBER);
	CScene2d::BindTexture(m_pTexture);
	return S_OK;
}

//-----------------------------------------------------------------------------
//	終了処理
//-----------------------------------------------------------------------------
void CGaugeber::Uninit(void)
{
	CScene2d::Uninit();
}

//-----------------------------------------------------------------------------
//	更新処理
//-----------------------------------------------------------------------------
void CGaugeber::Update(void)
{
}

//-----------------------------------------------------------------------------
//	描画処理
//-----------------------------------------------------------------------------
void CGaugeber::Draw(void)
{
	CScene2d::Draw();
}

//-----------------------------------------------------------------------------
//	インクルードファイル
//-----------------------------------------------------------------------------
HRESULT CGaugeber::Load(void)
{
	LPDIRECT3DDEVICE9 pDevice;
	pDevice = CManager::GetRenderer()->GetDevice();

	//テクスチャの読み込み
	D3DXCreateTextureFromFile(pDevice, TEXTURE_PATH_GAUGBER, &m_pTexture);

	return S_OK;
}

//-----------------------------------------------------------------------------
//	インクルードファイル
//-----------------------------------------------------------------------------
void CGaugeber::UnLoad(void)
{
	//テクスチャの破棄
	if (m_pTexture != NULL)
	{
		m_pTexture->Release();
		m_pTexture = NULL;
	}
}
